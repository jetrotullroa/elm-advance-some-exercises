var _user$project$Main$pageToHash = function (page) {
	var _p0 = page;
	switch (_p0.ctor) {
		case 'LeaderBoardPage':
			return '/#';
		case 'LoginPage':
			return '#/login';
		case 'RunnerPage':
			return '#/add';
		default:
			return '#notfound';
	}
};
var _user$project$Main$saveToken = _elm_lang$core$Native_Platform.outgoingPort(
	'saveToken',
	function (v) {
		return v;
	});
var _user$project$Main$deleteToken = _elm_lang$core$Native_Platform.outgoingPort(
	'deleteToken',
	function (v) {
		return null;
	});
var _user$project$Main$Flags = function (a) {
	return {token: a};
};
var _user$project$Main$Model = F6(
	function (a, b, c, d, e, f) {
		return {page: a, leaderBoard: b, login: c, runner: d, token: e, loggedin: f};
	});
var _user$project$Main$RunnerPage = {ctor: 'RunnerPage'};
var _user$project$Main$authPages = {
	ctor: '::',
	_0: _user$project$Main$RunnerPage,
	_1: {ctor: '[]'}
};
var _user$project$Main$authForPage = F2(
	function (page, loggedin) {
		return loggedin || (!A2(_elm_lang$core$List$member, page, _user$project$Main$authPages));
	});
var _user$project$Main$LoginPage = {ctor: 'LoginPage'};
var _user$project$Main$authRedirect = F2(
	function (page, loggedin) {
		return A2(_user$project$Main$authForPage, page, loggedin) ? {ctor: '_Tuple2', _0: page, _1: _elm_lang$core$Platform_Cmd$none} : {
			ctor: '_Tuple2',
			_0: _user$project$Main$LoginPage,
			_1: _elm_lang$navigation$Navigation$modifyUrl(
				_user$project$Main$pageToHash(_user$project$Main$LoginPage))
		};
	});
var _user$project$Main$LeaderBoardPage = {ctor: 'LeaderBoardPage'};
var _user$project$Main$NotFound = {ctor: 'NotFound'};
var _user$project$Main$hashToPage = function (hash) {
	var _p1 = hash;
	switch (_p1) {
		case '/#':
			return _user$project$Main$LeaderBoardPage;
		case '#/leaderboard':
			return _user$project$Main$LeaderBoardPage;
		case '#/login':
			return _user$project$Main$LoginPage;
		case '#/add':
			return _user$project$Main$RunnerPage;
		case '':
			return _user$project$Main$LeaderBoardPage;
		default:
			return _user$project$Main$NotFound;
	}
};
var _user$project$Main$RunnerMsg = function (a) {
	return {ctor: 'RunnerMsg', _0: a};
};
var _user$project$Main$LogoutMsg = {ctor: 'LogoutMsg'};
var _user$project$Main$LoginMsg = function (a) {
	return {ctor: 'LoginMsg', _0: a};
};
var _user$project$Main$LeaderBoardMsg = function (a) {
	return {ctor: 'LeaderBoardMsg', _0: a};
};
var _user$project$Main$init = F2(
	function (flags, location) {
		var _p2 = _user$project$Runner$init;
		var runnerInitModel = _p2._0;
		var runnerCmd = _p2._1;
		var _p3 = _user$project$Login$init;
		var loginInitModel = _p3._0;
		var loginCmd = _p3._1;
		var _p4 = _user$project$LeaderBoard$init;
		var leaderBoardInitModel = _p4._0;
		var leaderBoardCmd = _p4._1;
		var loggedin = !_elm_lang$core$Native_Utils.eq(flags.token, _elm_lang$core$Maybe$Nothing);
		var page = _user$project$Main$hashToPage(location.hash);
		var _p5 = A2(_user$project$Main$authRedirect, page, loggedin);
		var updatedPage = _p5._0;
		var cmd = _p5._1;
		var initModel = {page: updatedPage, leaderBoard: leaderBoardInitModel, login: loginInitModel, runner: runnerInitModel, token: flags.token, loggedin: loggedin};
		var cmds = _elm_lang$core$Platform_Cmd$batch(
			{
				ctor: '::',
				_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$LeaderBoardMsg, leaderBoardCmd),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$LoginMsg, loginCmd),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$RunnerMsg, runnerCmd),
						_1: {
							ctor: '::',
							_0: cmd,
							_1: {ctor: '[]'}
						}
					}
				}
			});
		return {ctor: '_Tuple2', _0: initModel, _1: cmds};
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p6 = msg;
		switch (_p6.ctor) {
			case 'Navigate':
				var _p7 = _p6._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{page: _p7}),
					_1: _elm_lang$navigation$Navigation$newUrl(
						_user$project$Main$pageToHash(_p7))
				};
			case 'ChangePage':
				var _p8 = A2(_user$project$Main$authRedirect, _p6._0, model.loggedin);
				var updatedPage = _p8._0;
				var cmd = _p8._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{page: updatedPage}),
					_1: cmd
				};
			case 'LeaderBoardMsg':
				var _p9 = A2(_user$project$LeaderBoard$update, _p6._0, model.leaderBoard);
				var leaderBoardModel = _p9._0;
				var cmd = _p9._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{leaderBoard: leaderBoardModel}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$LeaderBoardMsg, cmd)
				};
			case 'LoginMsg':
				var _p10 = A2(_user$project$Login$update, _p6._0, model.login);
				var loginModel = _p10._0;
				var cmd = _p10._1;
				var token = _p10._2;
				var loggedin = !_elm_lang$core$Native_Utils.eq(token, _elm_lang$core$Maybe$Nothing);
				var saveTokenCmd = function () {
					var _p11 = token;
					if (_p11.ctor === 'Just') {
						return _user$project$Main$saveToken(_p11._0);
					} else {
						return _elm_lang$core$Platform_Cmd$none;
					}
				}();
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{login: loginModel, token: token, loggedin: loggedin}),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$LoginMsg, cmd),
							_1: {
								ctor: '::',
								_0: saveTokenCmd,
								_1: {ctor: '[]'}
							}
						})
				};
			case 'LogoutMsg':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{token: _elm_lang$core$Maybe$Nothing, loggedin: false}),
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: _user$project$Main$deleteToken(
								{ctor: '_Tuple0'}),
							_1: {
								ctor: '::',
								_0: _elm_lang$navigation$Navigation$modifyUrl(
									_user$project$Main$pageToHash(_user$project$Main$LeaderBoardPage)),
								_1: {ctor: '[]'}
							}
						})
				};
			default:
				var _p12 = A3(
					_user$project$Runner$update,
					A2(_elm_lang$core$Maybe$withDefault, '', model.token),
					_p6._0,
					model.runner);
				var runnerModel = _p12._0;
				var cmd = _p12._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{runner: runnerModel}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, _user$project$Main$RunnerMsg, cmd)
				};
		}
	});
var _user$project$Main$subscriptions = function (model) {
	var runnerSub = _user$project$Runner$subscriptions(model.runner);
	var loginSub = _user$project$Login$subscriptions(model.login);
	var leaderBoardSub = _user$project$LeaderBoard$subscriptions(model.leaderBoard);
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$core$Platform_Sub$map, _user$project$Main$LeaderBoardMsg, leaderBoardSub),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Platform_Sub$map, _user$project$Main$LoginMsg, loginSub),
				_1: {
					ctor: '::',
					_0: A2(_elm_lang$core$Platform_Sub$map, _user$project$Main$RunnerMsg, runnerSub),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$ChangePage = function (a) {
	return {ctor: 'ChangePage', _0: a};
};
var _user$project$Main$locationToMsg = function (location) {
	return _user$project$Main$ChangePage(
		_user$project$Main$hashToPage(location.hash));
};
var _user$project$Main$Navigate = function (a) {
	return {ctor: 'Navigate', _0: a};
};
var _user$project$Main$authLogin = function (_p13) {
	var _p14 = _p13;
	return _p14.loggedin ? A2(
		_elm_lang$html$Html$a,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$LogoutMsg),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Logout'),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$a,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$Main$Navigate(_user$project$Main$LoginPage)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Login'),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$addRunnerview = function (_p15) {
	var _p16 = _p15;
	return _p16.loggedin ? A2(
		_elm_lang$html$Html$a,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_user$project$Main$Navigate(_user$project$Main$RunnerPage)),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('Add Runner'),
			_1: {ctor: '[]'}
		}) : _elm_lang$html$Html$text('');
};
var _user$project$Main$pageHeader = function (model) {
	return A2(
		_elm_lang$html$Html$header,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$a,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						_user$project$Main$Navigate(_user$project$Main$LeaderBoardPage)),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Race Results'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _user$project$Main$addRunnerview(model),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$ul,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$li,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _user$project$Main$authLogin(model),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$view = function (model) {
	var page = function () {
		var _p17 = model.page;
		switch (_p17.ctor) {
			case 'LeaderBoardPage':
				return A2(
					_elm_lang$html$Html$map,
					_user$project$Main$LeaderBoardMsg,
					_user$project$LeaderBoard$view(model.leaderBoard));
			case 'LoginPage':
				return A2(
					_elm_lang$html$Html$map,
					_user$project$Main$LoginMsg,
					_user$project$Login$view(model.login));
			case 'RunnerPage':
				return A2(
					_elm_lang$html$Html$map,
					_user$project$Main$RunnerMsg,
					_user$project$Runner$view(model.runner));
			default:
				return A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('main'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$h1,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Page Not Found!'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
		}
	}();
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _user$project$Main$pageHeader(model),
			_1: {
				ctor: '::',
				_0: page,
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = A2(
	_elm_lang$navigation$Navigation$programWithFlags,
	_user$project$Main$locationToMsg,
	{init: _user$project$Main$init, update: _user$project$Main$update, view: _user$project$Main$view, subscriptions: _user$project$Main$subscriptions})(
	A2(
		_elm_lang$core$Json_Decode$andThen,
		function (token) {
			return _elm_lang$core$Json_Decode$succeed(
				{token: token});
		},
		A2(
			_elm_lang$core$Json_Decode$field,
			'token',
			_elm_lang$core$Json_Decode$oneOf(
				{
					ctor: '::',
					_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
					_1: {
						ctor: '::',
						_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
						_1: {ctor: '[]'}
					}
				}))));
